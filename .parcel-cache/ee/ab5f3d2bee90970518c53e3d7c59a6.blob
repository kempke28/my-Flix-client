var helpers = require("../../../../../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
"use strict";
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MovieView = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _Button = _interopRequireDefault(require("react-bootstrap/Button"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        "default": obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf1(o1, p1) {
        o1.__proto__ = p1;
        return o1;
    };
    return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf1(o1) {
        return o1.__proto__ || Object.getPrototypeOf(o1);
    };
    return _getPrototypeOf(o);
}
var MovieView1 = /*#__PURE__*/ function(_React$Component) {
    _inherits(MovieView2, _React$Component);
    var _super = _createSuper(MovieView2);
    function MovieView2() {
        _classCallCheck(this, MovieView2);
        return _super.apply(this, arguments);
    }
    _createClass(MovieView2, [
        {
            key: "render",
            value: function render() {
                var _this$props = this.props, movie = _this$props.movie, onBackClick = _this$props.onBackClick;
                return(/*#__PURE__*/ _react["default"].createElement("div", {
                    className: "movie-view"
                }, /*#__PURE__*/ _react["default"].createElement("div", {
                    className: "movie-poster"
                }, /*#__PURE__*/ _react["default"].createElement("img", {
                    src: movie.ImagePath
                })), /*#__PURE__*/ _react["default"].createElement("div", {
                    className: "movie-title"
                }, /*#__PURE__*/ _react["default"].createElement("span", {
                    className: "label"
                }, "Title: "), /*#__PURE__*/ _react["default"].createElement("span", {
                    className: "value"
                }, movie.Title)), /*#__PURE__*/ _react["default"].createElement("div", {
                    className: "movie-description"
                }, /*#__PURE__*/ _react["default"].createElement("span", {
                    className: "label"
                }, "Description: "), /*#__PURE__*/ _react["default"].createElement("span", {
                    className: "value"
                }, movie.Description)), /*#__PURE__*/ _react["default"].createElement(_Button["default"], {
                    variant: "primary",
                    onClick: function onClick() {
                        onBackClick(null);
                    }
                }, "Back")));
            }
        }
    ]);
    return MovieView2;
}(_react["default"].Component);
exports.MovieView = MovieView1;
MovieView1.propTypes = {
    movie: _propTypes["default"].shape({
        Title: _propTypes["default"].string.isRequired,
        Description: _propTypes["default"].string.isRequired,
        ImagePath: _propTypes["default"].string.isRequired
    }).isRequired
}; /*
                            "Genre": {
                                "Name": "Genre type",
                                "Description": "a small description of the genre"
                            },
                            "Director": {
                                "Name": "name director",
                                "Bio": "Small Bio from director"
                            },
                            "_id": "60a8cd5037f59be3e29b1c9e", Normally generated when movie is created ramdonly
                            "Title": "movie name",
                            "Description": "description from the movie, or sinopsis",
                            "ImagePath": "link to the image",
                            "ForKids": true,
                            "featured": "if its featured in cinemas or not"
*/ 

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}