var helpers = require("../../../../../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
"use strict";
function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") _typeof = function _typeof1(obj1) {
        return typeof obj1;
    };
    else _typeof = function _typeof2(obj1) {
        return obj1 && typeof Symbol === "function" && obj1.constructor === Symbol && obj1 !== Symbol.prototype ? "symbol" : typeof obj1;
    };
    return _typeof(obj);
}
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.MainView = void 0;
var _react = _interopRequireDefault(require("react"));
var _axios = _interopRequireDefault(require("axios"));
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("./movie-view/movie-view");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        "default": obj
    };
}
function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
    for(var i = 0; i < props.length; i++){
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
    }
}
function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
}
function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) throw new TypeError("Super expression must either be null or a function");
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            writable: true,
            configurable: true
        }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
}
function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf1(o1, p1) {
        o1.__proto__ = p1;
        return o1;
    };
    return _setPrototypeOf(o, p);
}
function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
            var NewTarget = _getPrototypeOf(this).constructor;
            result = Reflect.construct(Super, arguments, NewTarget);
        } else result = Super.apply(this, arguments);
        return _possibleConstructorReturn(this, result);
    };
}
function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) return call;
    return _assertThisInitialized(self);
}
function _assertThisInitialized(self) {
    if (self === void 0) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return self;
}
function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
    } catch (e) {
        return false;
    }
}
function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf1(o1) {
        return o1.__proto__ || Object.getPrototypeOf(o1);
    };
    return _getPrototypeOf(o);
}
var MainView1 = /*#__PURE__*/ function(_React$Component) {
    _inherits(MainView2, _React$Component);
    var _super = _createSuper(MainView2);
    function MainView2() {
        var _this;
        _classCallCheck(this, MainView2);
        _this = _super.call(this);
        _this.state = {
            movies: [
                {
                    _id: 1,
                    Title: 'Inception',
                    Description: 'desc1...',
                    ImagePath: '...'
                },
                {
                    _id: 2,
                    Title: 'The Shawshank Redemption',
                    Description: 'desc2...',
                    ImagePath: '...'
                },
                {
                    _id: 3,
                    Title: 'Gladiator',
                    Description: 'desc3...',
                    ImagePath: '...'
                }
            ],
            selectedMovie: null
        };
        return _this;
    }
    _createClass(MainView2, [
        {
            key: "componentDidMount",
            value: function componentDidMount() {
                var _this2 = this;
                _axios["default"].get('https://movie-api-1.herokuapp.com//movies').then(function(response) {
                    _this2.setState({
                        movies: response.data
                    });
                })["catch"](function(error) {
                    console.log(error);
                });
            }
        },
        {
            key: "setSelectedMovie",
            value: function setSelectedMovie(newSelectedMovie) {
                this.setState({
                    selectedMovie: newSelectedMovie
                });
            }
        },
        {
            key: "render",
            value: function render() {
                var _this3 = this;
                var _this$state = this.state, movies = _this$state.movies, selectedMovie = _this$state.selectedMovie;
                if (movies.length === 0) return(/*#__PURE__*/ _react["default"].createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _react["default"].createElement("div", {
                    className: "main-view"
                }, selectedMovie ? /*#__PURE__*/ _react["default"].createElement(_movieView.MovieView, {
                    movie: selectedMovie,
                    onBackClick: function onBackClick(newSelectedMovie) {
                        _this3.setSelectedMovie(newSelectedMovie);
                    }
                }) : movies.map(function(movie) {
                    return(/*#__PURE__*/ _react["default"].createElement(_movieCard.MovieCard, {
                        key: movie._id,
                        movie: movie,
                        onMovieClick: function onMovieClick(movie1) {
                            _this3.setSelectedMovie(movie1);
                        }
                    }));
                })));
            }
        }
    ]);
    return MainView2;
}(_react["default"].Component);
exports.MainView = MainView1;

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}